"use strict";(self.webpackChunk_motion_canvas_docs=self.webpackChunk_motion_canvas_docs||[]).push([[490],{2665:(e,n,t)=>{t.d(n,{Z:()=>h});var a=t(2784);const o="container_lQCo",s="small_As57",i="banner_A4QS",r="player_tELG",l="link_BTzN",m="icon_wSGd";var d=t(7896);function c(e){let{width:n=24,height:t=24,...o}=e;return a.createElement("svg",(0,d.Z)({viewBox:"0 0 24 24",width:n,height:t,"aria-hidden":!0},o),a.createElement("path",{d:"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z",fill:"currentColor"}))}var u=t(9817),p=t(6277);function g(e){let{name:n}=e;const t="https://github.com/motion-canvas/motion-canvas/blob/main/packages/examples/src/scenes/"+n+".tsx";return a.createElement(u.Z,{to:t,className:(0,p.Z)("padding--sm",l)},a.createElement("span",null,"View source code"),a.createElement(c,{className:m}))}function h(e){let{name:n,banner:t,small:l}=e;return a.createElement("div",{className:(0,p.Z)(o,t&&i,l&&s)},a.createElement("motion-canvas-player",{class:r,src:"/examples/"+n+".js",auto:t}),a.createElement(g,{name:n}))}t(1263).Z.canUseDOM&&t.e(5483).then(t.bind(t,5483))},3456:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>m,toc:()=>c});var a=t(7896),o=(t(2784),t(876)),s=t(2665),i=t(8128);const r={},l="Random values",m={unversionedId:"guides/getting-started/utils/random",id:"guides/getting-started/utils/random",title:"Random values",description:"Randomly generated values can be used to create a sense of variety and",source:"@site/docs/guides/getting-started/utils/random.mdx",sourceDirName:"guides/getting-started/utils",slug:"/guides/getting-started/utils/random",permalink:"/guides/getting-started/utils/random",draft:!1,editUrl:"https://github.com/motion-canvas/motion-canvas/blob/main/docs/guides/getting-started/utils/random.mdx",tags:[],version:"current",lastUpdatedBy:"Jacob",frontMatter:{},sidebar:"guides",previous:{title:"Transitions",permalink:"/guides/getting-started/transitions"},next:{title:"Rendering",permalink:"/guides/getting-started/rendering"}},d={},c=[],u={toc:c};function p(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"random-values"},"Random values"),(0,o.kt)(s.Z,{name:"random",banner:!0,mdxType:"AnimationPlayer"}),(0,o.kt)("p",null,"Randomly generated values can be used to create a sense of variety and\nunpredictability in your animation. In Motion Canvas, it's achieved using the\n",(0,o.kt)("a",{parentName:"p",href:"/api/core/utils#useRandom"},(0,o.kt)("inlineCode",{parentName:"a"},"useRandom()"))," function.\nIt returns a random number generator (RNG) for the current scene:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import {useRandom} from '@motion-canvas/core/lib/utils';\n\nconst random = useRandom();\nconst integer = random.nextInt(0, 10);\n")),(0,o.kt)("p",null,"In this case, calling ",(0,o.kt)("inlineCode",{parentName:"p"},"nextInt()")," will return an integer in the range from\n0 to 10 (exclusive). Check the ",(0,o.kt)("a",{parentName:"p",href:"/api/core/scenes/Random"},(0,o.kt)("inlineCode",{parentName:"a"},"Random")," api")," to see\nall available methods."),(0,o.kt)("p",null,"Unlike ",(0,o.kt)("inlineCode",{parentName:"p"},"Math.random()"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"useRandom()")," is completely reproducible - each time the\nanimation is played the generated values will be exactly the same. The seed used\nto generate these numbers is stored in the meta file of each scene."),(0,o.kt)("p",null,"You can also provide your own seed to find a sequence of numbers that best suits\nyour needs:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const random = useRandom(123);\n")),(0,o.kt)("p",null,"The animation at the top of this page uses a random number generator to vary\nthe height of rectangles and make them look like a sound-wave:"),(0,o.kt)(i.Z,{language:"tsx",mdxType:"CodeBlock"},"import {makeScene2D} from '@motion-canvas/2d/lib/scenes';\nimport {Layout, Rect} from '@motion-canvas/2d/lib/components';\nimport {makeRef, range, useRandom} from '@motion-canvas/core/lib/utils';\nimport {all, loop, sequence} from '@motion-canvas/core/lib/flow';\n\nexport default makeScene2D(function* (view) {\n  // highlight-next-line\n  const random = useRandom();\n  const rects: Rect[] = [];\n\n  view.add(\n    <Layout layout gap={10} alignItems=\"center\">\n      {range(40).map(i => (\n        <Rect\n          ref={makeRef(rects, i)}\n          radius={5}\n          width={10}\n          height={10}\n          fill={'#e13238'}\n        />\n      ))}\n    </Layout>,\n  );\n\n  yield* loop(3, () =>\n    sequence(\n      0.04,\n      ...rects.map(rect =>\n        all(\n          // highlight-next-line\n          rect.size.y(random.nextInt(100, 200), 0.5).to(10, 0.5),\n          rect.fill('#e6a700', 0.5).to('#e13238', 0.5),\n        ),\n      ),\n    ),\n  );\n});\n"))}p.isMDXComponent=!0}}]);