"use strict";(self.webpackChunk_motion_canvas_docs=self.webpackChunk_motion_canvas_docs||[]).push([[2802],{876:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>u});var r=a(2784);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),s=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),k=s(a),u=n,h=k["".concat(p,".").concat(u)]||k[u]||m[u]||l;return a?r.createElement(h,i(i({ref:t},d),{},{components:a})):r.createElement(h,i({ref:t},d))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=k;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var s=2;s<l;s++)i[s]=a[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}k.displayName="MDXCreateElement"},8003:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var r=a(7896),n=(a(2784),a(876));const l={id:"threading",title:"Module: threading",sidebar_label:"threading",sidebar_position:0,custom_edit_url:null},i=void 0,o={unversionedId:"api/modules/threading",id:"api/modules/threading",title:"Module: threading",description:"Classes",source:"@site/docs/api/modules/threading.md",sourceDirName:"api/modules",slug:"/api/modules/threading",permalink:"/api/modules/threading",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"threading",title:"Module: threading",sidebar_label:"threading",sidebar_position:0,custom_edit_url:null},sidebar:"api",previous:{title:"themes",permalink:"/api/modules/themes"},next:{title:"transitions",permalink:"/api/modules/transitions"}},p={},s=[{value:"Classes",id:"classes",level:2},{value:"Interfaces",id:"interfaces",level:2},{value:"Type Aliases",id:"type-aliases",level:2},{value:"ThreadGenerator",id:"threadgenerator",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"Functions",id:"functions",level:2},{value:"cancel",id:"cancel",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"isPromise",id:"ispromise",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"isThreadGenerator",id:"isthreadgenerator",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"join",id:"join",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"threads",id:"threads",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4}],d={toc:s};function m(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"classes"},"Classes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/classes/threading.Thread"},"Thread"))),(0,n.kt)("h2",{id:"interfaces"},"Interfaces"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/interfaces/threading.ThreadsCallback"},"ThreadsCallback")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/interfaces/threading.ThreadsFactory"},"ThreadsFactory"))),(0,n.kt)("h2",{id:"type-aliases"},"Type Aliases"),(0,n.kt)("h3",{id:"threadgenerator"},"ThreadGenerator"),(0,n.kt)("p",null,"\u01ac ",(0,n.kt)("strong",{parentName:"p"},"ThreadGenerator"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"Generator"),"<",(0,n.kt)("a",{parentName:"p",href:"/api/modules/threading#threadgenerator"},(0,n.kt)("inlineCode",{parentName:"a"},"ThreadGenerator"))," ","|"," ",(0,n.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,n.kt)("inlineCode",{parentName:"p"},"any"),">",", ",(0,n.kt)("inlineCode",{parentName:"p"},"void"),", ",(0,n.kt)("a",{parentName:"p",href:"/api/classes/threading.Thread"},(0,n.kt)("inlineCode",{parentName:"a"},"Thread"))," ","|"," ",(0,n.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,n.kt)("p",null,"The main generator type produced by all generator functions in Motion Canvas."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,n.kt)("p",null,"Yielded values can be used to control the flow of animation:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Progress to the next frame:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"yield;\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Run another generator synchronously:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"yield* generatorFunction();\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Run another generator concurrently:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"const task = yield generatorFunction();\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Await a ",(0,n.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/web/javascript/reference/global_objects/promise"},"Promise"),":")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"const result = yield asyncFunction();\n")),(0,n.kt)("h4",{id:"defined-in"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/motion-canvas/motion-canvas/blob/2691148/packages/core/src/threading/ThreadGenerator.ts#L31"},"packages/core/src/threading/ThreadGenerator.ts:31")),(0,n.kt)("h2",{id:"functions"},"Functions"),(0,n.kt)("h3",{id:"cancel"},"cancel"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"cancel"),"(...",(0,n.kt)("inlineCode",{parentName:"p"},"tasks"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"void")),(0,n.kt)("p",null,"Cancel all listed tasks."),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"const task = yield generatorFunction();\n\n// do something concurrently\n\nyield* cancel(task);\n")),(0,n.kt)("h4",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"...tasks")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/api/modules/threading#threadgenerator"},(0,n.kt)("inlineCode",{parentName:"a"},"ThreadGenerator")),"[]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A list of tasks to cancel.")))),(0,n.kt)("h4",{id:"returns"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"void")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"ispromise"},"isPromise"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"isPromise"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"value"),"): value is Promise<any",">"),(0,n.kt)("p",null,"Check if the given value is a ",(0,n.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/web/javascript/reference/global_objects/promise"},"Promise"),"."),(0,n.kt)("h4",{id:"parameters-1"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"value")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"any")),(0,n.kt)("td",{parentName:"tr",align:"left"},"A possible ",(0,n.kt)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/web/javascript/reference/global_objects/promise"},"Promise"),".  ",(0,n.kt)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/web/javascript/reference/global_objects/promise"},"promise"),": ",(0,n.kt)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/web/javascript/reference/global_objects/promise"},"https://developer.mozilla.org/en-US/docs/web/javascript/reference/global_objects/promise"))))),(0,n.kt)("h4",{id:"returns-1"},"Returns"),(0,n.kt)("p",null,"value is Promise<any",">"),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"isthreadgenerator"},"isThreadGenerator"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"isThreadGenerator"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"value"),"): value is ThreadGenerator"),(0,n.kt)("p",null,"Check if the given value is a ",(0,n.kt)("a",{parentName:"p",href:"/api/modules/threading#threadgenerator"},"ThreadGenerator"),"."),(0,n.kt)("h4",{id:"parameters-2"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"value")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"unknown")),(0,n.kt)("td",{parentName:"tr",align:"left"},"A possible thread ",(0,n.kt)("a",{parentName:"td",href:"/api/modules/threading#threadgenerator"},"ThreadGenerator"),".")))),(0,n.kt)("h4",{id:"returns-2"},"Returns"),(0,n.kt)("p",null,"value is ThreadGenerator"),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"join"},"join"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"join"),"(...",(0,n.kt)("inlineCode",{parentName:"p"},"tasks"),"): ",(0,n.kt)("a",{parentName:"p",href:"/api/modules/threading#threadgenerator"},(0,n.kt)("inlineCode",{parentName:"a"},"ThreadGenerator"))),(0,n.kt)("p",null,"Pause the current generator until all listed tasks are finished."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"const task = yield generatorFunction();\n\n// do something concurrently\n\nyield* join(task);\n")),(0,n.kt)("h4",{id:"parameters-3"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"...tasks")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/api/modules/threading#threadgenerator"},(0,n.kt)("inlineCode",{parentName:"a"},"ThreadGenerator")),"[]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A list of tasks to join.")))),(0,n.kt)("h4",{id:"returns-3"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/api/modules/threading#threadgenerator"},(0,n.kt)("inlineCode",{parentName:"a"},"ThreadGenerator"))),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"join"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"all"),", ...",(0,n.kt)("inlineCode",{parentName:"p"},"tasks"),"): ",(0,n.kt)("a",{parentName:"p",href:"/api/modules/threading#threadgenerator"},(0,n.kt)("inlineCode",{parentName:"a"},"ThreadGenerator"))),(0,n.kt)("p",null,"Pause the current generator until listed tasks are finished."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"const taskA = yield generatorFunctionA();\nconst taskB = yield generatorFunctionB();\n\n// do something concurrently\n\n// await any of the tasks\nyield* join(false, taskA, taskB);\n")),(0,n.kt)("h4",{id:"parameters-4"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"all")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"boolean")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Whether we should wait for all tasks or for at least one.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"...tasks")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/api/modules/threading#threadgenerator"},(0,n.kt)("inlineCode",{parentName:"a"},"ThreadGenerator")),"[]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A list of tasks to join.")))),(0,n.kt)("h4",{id:"returns-4"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/api/modules/threading#threadgenerator"},(0,n.kt)("inlineCode",{parentName:"a"},"ThreadGenerator"))),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"threads"},"threads"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"threads"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"factory"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"callback?"),"): ",(0,n.kt)("a",{parentName:"p",href:"/api/modules/threading#threadgenerator"},(0,n.kt)("inlineCode",{parentName:"a"},"ThreadGenerator"))),(0,n.kt)("p",null,"Create a context in which generators can be run concurrently."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("inlineCode",{parentName:"strong"},"Remarks"))),(0,n.kt)("p",null,"From the perspective of the external generator, ",(0,n.kt)("inlineCode",{parentName:"p"},"threads")," is executed\nsynchronously. By default, each scene generator is wrapped in its own\n",(0,n.kt)("inlineCode",{parentName:"p"},"threads")," generator."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"// first\n\nyield* threads(function* () {\n  const task = yield generatorFunction();\n  // second\n}); // <- `task` will be terminated here because the scope\n    //    of this `threads` generator has ended\n\n// third\n")),(0,n.kt)("h4",{id:"parameters-5"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"factory")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/api/interfaces/threading.ThreadsFactory"},(0,n.kt)("inlineCode",{parentName:"a"},"ThreadsFactory"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"A function that returns the generator to run.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"callback?")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/api/interfaces/threading.ThreadsCallback"},(0,n.kt)("inlineCode",{parentName:"a"},"ThreadsCallback"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"Called whenever threads are created, canceled or finished.                   Used for debugging purposes.")))),(0,n.kt)("h4",{id:"returns-5"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/api/modules/threading#threadgenerator"},(0,n.kt)("inlineCode",{parentName:"a"},"ThreadGenerator"))))}m.isMDXComponent=!0}}]);