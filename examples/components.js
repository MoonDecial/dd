var S=Object.defineProperty;var k=(t,s,e)=>s in t?S(t,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[s]=e;var r=(t,s,e)=>(k(t,typeof s!="symbol"?s+"":s,e),e);import{M as O,r as v,s as D,Q as _,N as R,g as b,f as g,j as h,C as z,R as V,a as A,t as w,e as j,m as F,w as u,V as M,b as N,c as B,P}from"./makeScene2D.8c41177b.js";import{c as d}from"./createRef.f9eb3d88.js";let l;l!=null||(l=new O("components",!1,{version:0}));l.loadData({version:0});const y=l;let f;f!=null||(f=new O("components",!1,{version:0}));f.loadData({version:0});const I=f;var Q=Object.defineProperty,U=Object.getOwnPropertyDescriptor,x=(t,s,e,a)=>{for(var o=a>1?void 0:a?U(s,e):s,c=t.length-1,p;c>=0;c--)(p=t[c])&&(o=(a?p(s,e,o):p(o))||o);return a&&o&&Q(s,e,o),o};class m extends R{constructor(e){super({...e});r(this,"isOn");r(this,"indicatorPosition",b(0));r(this,"offColor",new g.exports.Color("#242424"));r(this,"indicator",d());r(this,"container",d());this.indicatorPosition(this.initialState?50:-50),this.isOn=this.initialState(),this.add(h(V,{ref:this.container,fill:this.offColor,size:[200,100],radius:100,children:h(z,{x:()=>this.indicatorPosition(),ref:this.indicator,size:[80,80],fill:"#ffffff"})}))}*toggle(e){yield*A(w(e,a=>{const o=this.isOn?this.accent():this.offColor,c=this.isOn?this.offColor:this.accent();this.container().fill(g.exports.Color.lerp(o,c,j(a)))}),w(e,a=>{const o=this.indicator().position();this.indicatorPosition(j(a,o.x,this.isOn?-50:50))})),this.isOn=!this.isOn}}x([v(!1),D()],m.prototype,"initialState",2);x([v("#68ABDF"),_()],m.prototype,"accent",2);const i=F(function*(t){const s=d();t.add(h(m,{ref:s,initialState:!0})),yield*s().toggle(.6),yield*u(1),yield*s().toggle(.6),yield*u(1)});i.name="components";i.meta=I;var C;(C=i.onReplaced)!=null||(i.onReplaced=new M(i.config));const n=N({scenes:[i],size:new B(960,540)}),G=()=>n instanceof P?(n.meta=y,n.name="components",n.logger.warn({message:"A project instance was exported instead of a project factory.",remarks:`<p>Use the <code>makeProject()</code> function instead:</p>
<pre><code class="language-ts"><span class="hljs-keyword">import</span> {makeProject} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@motion-canvas/core&#x27;</span>;
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title function_">makeProject</span>({
  <span class="hljs-comment">// Configuration and scenes go here.</span>
});
</code></pre>
`,stack:n.creationStack}),n):new P("components",y,n);export{G as default};
